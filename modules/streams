#! /bin/bash

# source cfg file
. /usr/local/IPTVAgent/cfg/iptvagent.cfg

# source streamInfo
. $modulePath/streamInfo

#initialize parameters
server=`hostname`
MYSQL=`which mysql`

### use local xml file for getting stream info
if [ $streamOrigin = xml ]; then
    for name in `ls $streamPath`
        do
            source=`head -1 $streamPath/$name`
            getStreamInfo $name $source &
        done
### get stream info from database
elif [ $streamOrigin = db ]; then
    if [ $cached = on ]; then
        #get the updateTime in MySql
        sqlQueryUpdateTime="select max(updateTime) from ${RDATABASE}.stream where server ='$server';"
        CONNECTION="$MYSQL -h$RHOST -u$RUSER -p$RPASSWORD --default-character-set=utf8 -A -N"
        mysqlUpdateTime="$($CONNECTION -e "$sqlQueryUpdateTime")"
        
        #get the updateTime in Redis
        redisCmd=`which redis-cli`
        redisUpdateTime=`$redisCmd<<EOF
        get streamUpdateTime
        exit
        EOF`
        
        #if inconsistent, update redis cache
        if (`test "$mysqlUpdateTime" != "$redisUpdateTime" `||`test -z "$redisUpdateTime"`);then
            refreshRedisUpdateTime=`$redisCmd<<EOF
            set streamUpdateTime "$mysqlUpdateTime"
            exit
            EOF`
            sql="select streamName,source from ${RDATABASE}.stream where server ='$server';"
            CONNECTION="$MYSQL -h$RHOST -u$RUSER -p$RPASSWORD --default-character-set=utf8 -A -N"
            results=("$($CONNECTION -e "$sql")")
            
            #cache results in redis
            streamsInfo=""
            for var in ${results[*]}
            do
              streamsInfo=$streamsInfo" "$var
            done   
            redis=`$redisCmd<<EOF
            DEL streams
            hmset streams $streamsInfo
            exit
            EOF`
        fi
        
        #get cached streamNames from redis
        names=(`$redisCmd<<EOF
        hkeys streams
        exit
        EOF`)
        for name in ${names[*]}
           do
               source=`$redisCmd<<EOF
                hget streams $name
                exit
                EOF`    
               getStreamInfo $name $source &
           done
    else### use mysql directly without cache
        sql="select streamName,source from ${RDATABASE}.stream where server ='$server';"
        CONNECTION="$MYSQL -h$RHOST -u$RUSER -p$RPASSWORD --default-character-set=utf8 -A -N"
        while read name source
            do
                getStreamInfo $name $source &
            done< <(echo $sql | $CONNECTION)
    fi
else
    exit 1
fi
