#!/bin/bash

# source functions
. /usr/local/IPTVAgent/lib/functions

server=`hostname`

# Get the IO statistics for the first time
rstPrev=$(cat /proc/diskstats \
        |sed 's/':'/''/' \
	    |awk  -F' '  '  {   
        deviceName="\""$3"\""" "deviceName;  
        rd_merges=$5" "rd_merges;
        wr_merges=$9" "wr_merges;
        rd_ios=$4" "rd_ios;
        wr_ios=$8" "wr_ios;
        rd_sectors=$6" "rd_sectors;
        wr_sectors=$10" "wr_sectors;
        ticks=$13" "ticks;
        rd_ticks=$7" "rd_ticks;
        wr_ticks=$11" "wr_ticks;
         }END{print deviceName",";print rd_merges",";print wr_merges",";print rd_ios",";print wr_ios",";print rd_sectors",";print wr_sectors",";print ticks",";print rd_ticks",";print wr_ticks}' \
	)

#sleep for a while 
sleep 1s

# Get the IO statistics for the second time
#recordTime=`date -d today +"%Y-%m-%d %H:%M:%S"`
recordTime=`date +"%s"`
rst=$(cat /proc/diskstats \
    |sed 's/':'/''/' \
	|awk  -F' '  '  {   
        deviceName="\""$3"\""" "deviceName;  
        rd_merges=$5" "rd_merges;
        wr_merges=$9" "wr_merges;
        rd_ios=$4" "rd_ios;
        wr_ios=$8" "wr_ios;
        rd_sectors=$6" "rd_sectors;
        wr_sectors=$10" "wr_sectors;
       ticks=$13" "ticks;
        rd_ticks=$7" "rd_ticks;
        wr_ticks=$11" "wr_ticks;
         }END{print deviceName",";print rd_merges",";print wr_merges",";print rd_ios",";print wr_ios",";print rd_sectors",";print wr_sectors",";print ticks",";print rd_ticks",";print wr_ticks}' \
	)

#Process the IO statistics gathered at the first time
deviceNamePrev=$(echo $rstPrev | awk -F ',' '{print $1}')
rd_mergesPrev=$(echo $rstPrev | awk -F ',' '{print $2}')
wr_mergesPrev=$(echo $rstPrev | awk -F ',' '{print $3}')
rd_iosPrev=$(echo $rstPrev | awk -F ',' '{print $4}')
wr_iosPrev=$(echo $rstPrev | awk -F ',' '{print $5}')
rd_sectorsPrev=$(echo $rstPrev | awk -F ',' '{print $6}')
wr_sectorsPrev=$(echo $rstPrev | awk -F ',' '{print $7}')
ticksPrev=$(echo $rstPrev | awk -F ',' '{print $8}')
rd_ticksPrev=$(echo $rstPrev | awk -F ',' '{print $9}')
wr_ticksPrev=$(echo $rstPrev | awk -F ',' '{print $10}')

#construct arrays for the first-time data 
deviceNamePrevArray=(`echo ${deviceNamePrev%?}`)
rd_mergesPrevArray=(`echo ${rd_mergesPrev%?}`)
wr_mergesPrevArray=(`echo ${wr_mergesPrev%?}`)
rd_iosPrevArray=(`echo ${rd_iosPrev%?}`)
wr_iosPrevArray=(`echo ${wr_iosPrev%?}`)
rd_sectorsPrevArray=(`echo ${rd_sectorsPrev%?}`)
wr_sectorsPrevArray=(`echo ${wr_sectorsPrev%?}`)
ticksPrevArray=(`echo ${ticksPrev%?}`)
rd_ticksPrevArray=(`echo ${rd_ticksPrev%?}`)
wr_ticksPrevArray=(`echo ${wr_ticksPrev%?}`)

#Process the IO statistics gathered at the second time
deviceName=$(echo $rst | awk -F ',' '{print $1}')
rd_merges=$(echo $rst | awk -F ',' '{print $2}')
wr_merges=$(echo $rst | awk -F ',' '{print $3}')
rd_ios=$(echo $rst | awk -F ',' '{print $4}')
wr_ios=$(echo $rst | awk -F ',' '{print $5}')
rd_sectors=$(echo $rst | awk -F ',' '{print $6}')
wr_sectors=$(echo $rst | awk -F ',' '{print $7}')
ticks=$(echo $rst | awk -F ',' '{print $8}')
rd_ticks=$(echo $rst | awk -F ',' '{print $9}')
wr_ticks=$(echo $rst | awk -F ',' '{print $10}')

#construct arrays for the second-time data 
deviceNameArray=(`echo ${deviceName%?}`)
rd_mergesArray=(`echo ${rd_merges%?}`)
wr_mergesArray=(`echo ${wr_merges%?}`)
rd_iosArray=(`echo ${rd_ios%?}`)
wr_iosArray=(`echo ${wr_ios%?}`)
rd_sectorsArray=(`echo ${rd_sectors%?}`)
wr_sectorsArray=(`echo ${wr_sectors%?}`)
ticksArray=(`echo ${ticks%?}`)
rd_ticksArray=(`echo ${rd_ticks%?}`)
wr_ticksArray=(`echo ${wr_ticks%?}`)

#calculate and upload IO statistics
len=${#deviceNameArray[@]}
for((i=$len-1;i>-1;i--))
   do 
      let "mergedRead=${rd_mergesArray[i]}-${rd_mergesPrevArray[i]}"
      let "mergedWrite=${wr_mergesArray[i]}-${wr_mergesPrevArray[i]}"
      let "readRequest=${rd_iosArray[i]}-${rd_iosPrevArray[i]}"
      let "writeRequest=${wr_iosArray[i]}-${wr_iosPrevArray[i]}"
      let "sectorRead=${rd_sectorsArray[i]}-${rd_sectorsPrevArray[i]}"
      let "sectorWrite=${wr_sectorsArray[i]}-${wr_sectorsPrevArray[i]}"
      let "n_ios=(${rd_iosArray[i]}+${wr_iosArray[i]})-(${rd_iosPrevArray[i]}+${wr_iosPrevArray[i]})"
      let "n_ticks=(${rd_ticksArray[i]}+${wr_ticksArray[i]})-(${rd_ticksPrevArray[i]}+${wr_ticksPrevArray[i]})"
      let "n_kbytes=((${rd_sectorsArray[i]}+${wr_sectorsArray[i]})-(${rd_sectorsPrevArray[i]}+${wr_sectorsPrevArray[i]}))/2" 
      let "ticks=${ticksArray[i]}-${ticksPrevArray[i]}"   
      if (`test "${n_ios}" -eq "0"`);then
      sectorAverage=0
      await=0
      scvtm=0
      else
      sectorAverage=`echo "scale=4;$n_kbytes/$n_ios"|bc | awk '{printf "%.2f", $0}'` 
      await=`echo "scale=4;$n_ticks/$n_ios"|bc | awk '{printf "%.2f", $0}'` 
      scvtm=`echo "scale=4;$ticks/$n_ios"|bc | awk '{printf "%.2f", $0}'` 
      fi
      utilize=`echo "scale=4;$ticks/10"|bc | awk '{printf "%.2f", $0}'` 

      SQLINSERT="insert into io(deviceName,mergedRead,mergedWrite,readRequest,writeRequest,sectorRead,sectorWrite,sectorAverage,await,scvtm,utilize,recordTime,server) values(${deviceNameArray[i]},$mergedRead,$mergedWrite,$readRequest,$writeRequest,$sectorRead,$sectorWrite,$sectorAverage,$await,$scvtm,$utilize,\"$recordTime\",\"$server\");"

      echo $SQLINSERT
      insert $SQLINSERT 
   done
