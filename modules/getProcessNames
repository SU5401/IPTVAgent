#! /bin/bash
#get the real path of parent folder
SOURCE="$0"
while [ -h "$SOURCE"  ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE"  )" && pwd  )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /*  ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE"  )" && pwd  )"
#execute shellscripts
shells=${DIR}
. $shells/getProcessInfo
#initialize parameters
hostnameCmd=`which hostname`
testCmd=`which test`
server=`$hostnameCmd`
Host=localhost
User=root
mysql=`which mysql`
#get the updateTime in MySql
sqlQueryUpdateTime="select max(updateTime) from iptvm.process where server ='$server';"
MYSQL="$mysql -h$Host -u$User --default-character-set=utf8 -A -N"
mysqlUpdateTime="$($MYSQL -e "$sqlQueryUpdateTime")"
#get the updateTime in Redis
redisCmd=`which redis-cli`
redisUpdateTime=`$redisCmd<<EOF
get processUpdateTime
exit
EOF`
#if inconsistent, update redis cache
if (`$testCmd "$mysqlUpdateTime" != "$redisUpdateTime" `||`$testCmd -z "$redisUpdateTime"`);then
refreshRedisUpdateTime=`$redisCmd<<EOF
set processUpdateTime "$mysqlUpdateTime"
exit
EOF`
sql="select processName,source from iptvm.process where server ='$server';"
MYSQL="$mysql -h$Host -u$User --default-character-set=utf8 -A -N"
results=("$($MYSQL -e "$sql")")
#cache results in redis
processInfo=""
for var in ${results[*]}
do
  processInfo=$processInfo" "$var
done   
redis=`$redisCmd<<EOF
DEL process
hmset process $processInfo
exit
EOF`
fi
#get cached processNames from redis
names=(`$redisCmd<<EOF
hkeys process
exit
EOF`)
for name in ${names[*]}
   do
      getProcessInfo $name &
   done
