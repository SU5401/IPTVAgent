#!/bin/bash
#get the real path of parent folder
SOURCE="$0"
while [ -h "$SOURCE"  ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE"  )" && pwd  )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /*  ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE"  )" && pwd  )"
shells=${DIR}
. $shells/insert
hostnameCmd=`which hostname`
server=`$hostnameCmd`
grepCmd=`which grep`
awkCmd=`which awk`
catCmd=`which cat`
sedCmd=`which sed`
echoCmd=`which echo`
psCmd=`which ps`
sleepCmd=`which sleep`
dateCmd=`which date`
testCmd=`which test`
# Get the total CPU statistics for the first time, discarding the 'cpu ' prefix.
prevCPU=(`$sedCmd -n 's/^cpu\s//p' /proc/stat`)
prevTOTAL=0
for VALUE in "${prevCPU[@]}"; 
  do
    let "prevTOTAL=$prevTOTAL+$VALUE"
  done
prevIdleTime=${prevCPU[3]}
prevUser=${prevCPU[0]} 
prevSystem=${prevCPU[2]}
prevWait=${prevCPU[4]}
prevHardIrq=${prevCPU[5]}
prevSoftIrq=${prevCPU[6]}
prevNice=${prevCPU[1]}
prevSteal=${prevCPU[7]}
prevGuest=${prevCPU[8]}
#sleep for a while
$sleepCmd 1
#Get CPU statistics for the second time
recordTime=`$dateCmd -d today +"%Y-%m-%d %H:%M:%S"`
CPU=(`$sedCmd -n 's/^cpu\s//p' /proc/stat`)
TOTAL=0
for VALUE in "${CPU[@]}"; 
  do
    let "TOTAL=$TOTAL+$VALUE"
  done
idleTime=${CPU[3]}
user=${CPU[0]}
system=${CPU[2]} 
wait=${CPU[4]}
hardIrq=${CPU[5]}
softIrq=${CPU[6]}
nice=${CPU[1]}
steal=${CPU[7]}
guest=${CPU[8]}
#Calculate the difference
let "diffTOTAL=$TOTAL-$prevTOTAL"
let "diffIdleTime=$idleTime-$prevIdleTime"
let "diffUser=$user-$prevUser"
let "diffSystem=$system-$prevSystem"
let "diffWait=$wait-$prevWait"
let "diffHardIrq=$hardIrq-$prevHardIrq"
let "diffSoftIrq=$softIrq-$prevSoftIrq"
let "diffNice=$nice-$prevNice"
let "diffSteal=$steal-$prevSteal"
let "diffGuest=$guest-$prevGuest"
#Calculate the percentage
idleTimeP=`$echoCmd "scale=4;$diffIdleTime/$diffTOTAL*100"|bc | $awkCmd '{printf "%.2f", $0}'` 
userP=`$echoCmd "scale=4;$diffUser/$diffTOTAL*100"|bc | $awkCmd '{printf "%.2f", $0}'` 
systemP=`$echoCmd "scale=4;$diffSystem/$diffTOTAL*100"|bc | $awkCmd '{printf "%.2f", $0}'` 
waitP=`$echoCmd "scale=4;$diffWait/$diffTOTAL*100"|bc| $awkCmd '{printf "%.2f", $0}'`
hardIrqP=`$echoCmd "scale=4;$diffHardIrq/$diffTOTAL*100"|bc| $awkCmd '{printf "%.2f", $0}'`
softIrqP=`$echoCmd "scale=4;$diffSoftIrq/$diffTOTAL*100"|bc| $awkCmd '{printf "%.2f", $0}'`
niceP=`$echoCmd "scale=4;$diffNice/$diffTOTAL*100"|bc| $awkCmd '{printf "%.2f", $0}'`
stealP=`$echoCmd "scale=4;$diffSteal/$diffTOTAL*100"|bc| $awkCmd '{printf "%.2f", $0}'`
guestP=`$echoCmd "scale=4;$diffGuest/$diffTOTAL*100"|bc| $awkCmd '{printf "%.2f", $0}'`
if(`$testCmd -n "$guestP"`); 
then guestP=0 
fi
#Calculate the util rate of CPU
utilize=`$echoCmd "scale=4;(1-$diffIdleTime/$diffTOTAL-$diffWait/$diffTOTAL-$diffSteal/$diffTOTAL)*100"|bc| $awkCmd '{printf "%.2f", $0}'`
ncpu=`$echoCmd $($catCmd /proc/stat|$grepCmd ^cpu -c)`
let "ncpu-=1"
SQLINSERT="insert into cpu(user,system,wait,hardIrq,softIrq,nice,steal,guest,utilize,ncpu,idle,recordTime,server) values($userP,$systemP,$waitP,$hardIrqP,$softIrqP,$niceP,$stealP,$guestP,$utilize,$ncpu,$idleTimeP,\"$recordTime\",\"$server\");"
$echoCmd $SQLINSERT
insert $SQLINSERT


